# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: MSBuild

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: https-test.sln

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
      
    - name: Clone vcpkg (full clone)
      run: git clone https://github.com/microsoft/vcpkg.git

    - name: Bootstrap vcpkg
      run: .\vcpkg\bootstrap-vcpkg.bat

    - name: Integrate vcpkg with MSBuild
      run: .\vcpkg\vcpkg.exe integrate project

    - name: Run vcpkg install
      run: .\vcpkg\vcpkg.exe install --triplet x64-windows-release --x-manifest-root=${{ github.workspace }} --x-install-root=${{ github.workspace }}\vcpkg\installed


    #- name: Build
      #working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      #run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      run:  msbuild /m  /p:Configuration=${{ env.BUILD_CONFIGURATION }} /p:VcpkgRoot="${{ github.workspace }}\vcpkg" /p:VcpkgTriplet="x64-windows-release" ${{ env.SOLUTION_FILE_PATH }}

